#2019102236

grpc 공부내용

기본적인 rpc호출에서의 life cycle은 다음과 같다.
1-1. 클라이언트가 로컬의 stub메소드를 호출한다.
1-2. 서버측의 stub이 클라이언트의 stub에게서 알림을 받고, 서버는 rpc가 호출되었음을 공지 받는다.
1-3. 서버는 초기 메타데이터를 보내거나 클라이언트의 메시지가 도착할때까지 기다린다.
1-4. 클라이언트의 메시지가 도착하면, 서버는 응답을 만들기 위해 어떠 작업이 필요한지 확인하고, 응답메시지를 상태코드와 함께 클라이언트에게 전송한다.
1-5. 응답 상태가 OK라면, 클라이언트는 응답을 받고 완료된다.



우선, .proto파일에 정의되어있는 메소드를 구현해줘야한다.
$ ./gradlew generateProto

를 생성된 ~Grpc.~BaseImpl을 상속받은 클래스를 상속받고 메서드 오버라이딩


중요 : 서버가 종료되지 않게 하기 위해 다음 메소드를 추가 해줘야한다
 .awaitTermination();

grpc 클라이언트는 stub에 연결된 서버의 정보를 맵핑해줘야함
grpc 서버의 정보는 ManagedChannel 클래스를 통해서 등록 가능하다.
managedChannel = ManagedChannelBuilder
                .forAddress(host, port)
                .usePlaintext()
                .build();

